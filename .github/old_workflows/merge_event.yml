name: hugo build and deploy

on:
  push:
    branches:
      - main  # Set a branch to deploy

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: set source repo as org_repo
        run: |
          echo $(echo org_repo="$GITHUB_REPOSITORY") >> $GITHUB_ENV
      - name: install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.0/yq_linux_amd64 -O /usr/bin/yq &&\
          sudo chmod +x /usr/bin/yq
      - uses: actions/checkout@v2
        with:
          submodules: recursive  # Fetch the Docsy theme
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod
      - name: check filename of most recent commit
        run: |
          echo "the commit id is: ${{ github.event.commits[0].id}}"
          git show ${{ github.event.commits[0].id}} --name-only --oneline | tail -1 > /tmp/pathfilename
          cat /tmp/pathfilename
      - name: check if blog and set filecheck file
        run: |
          sed -n '/blog/p' /tmp/pathfilename > /tmp/filecheck
          cat /tmp/filecheck
      - name: set isblog env variable to true/false
        run: |
          if [ "$(wc -m < /tmp/filecheck)" -gt "5" ];
          then
            echo isblog=true >> $GITHUB_ENV
            echo "this is a blog"
          else
            echo isblog=false >> $GITHUB_ENV
            echo "this is not a blog"
          fi
      - name: check isblog value
        run: |
          echo "isblog value is: $(echo $isblog)"
          echo "the following line echoes isblog"
          echo $isblog
      - name: extract new tutorial filename and title
        if: env.isblog == 'true'
        run: |
          echo $(sed 's/content\/english\/blog\///' /tmp/pathfilename) > /tmp/filename
          cat /tmp/filename
          yq e '.title' content/english/blog/"$(cat /tmp/filename)" | head -1 > /tmp/title
          echo blogtitle=$(cat /tmp/title) >> $GITHUB_ENV
      - name: gather ID and slug for modernappsninja members team
        if: env.isblog == 'true'
        run: |
          curl -s \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://api.github.com/orgs/modernappsninja/teams" \
          -o /tmp/ninja_teams_list.json
          # gather members team id
          cat /tmp/ninja_teams_list.json | jq -r 'map(select(.name=="'Members'")) | .[].id' > /tmp/members_team_id
          cat /tmp/members_team_id
          echo members_team_id=$(cat /tmp/members_team_id) >> $GITHUB_ENV
          # gather members team slug
          cat /tmp/ninja_teams_list.json | jq -r 'map(select(.name=="'Members'")) | .[].slug' > /tmp/members_team_slug
          cat /tmp/members_team_slug
          echo members_team_slug=$(cat /tmp/members_team_slug) >> $GITHUB_ENV
      - name: update members discussion board hackathon award thread about new tutorial
        if: env.isblog == 'true'
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"body":"New Tutorial Posted: ${{ env.blogtitle }}. https://modernapps.ninja/blog/","title":"New Tutorial Posted"}' \
          "https://api.github.com/orgs/modernappsninja/teams/${{ env.members_team_slug }}/discussions" \
          -o /tmp/add_course_team_discussion_response.json
          cat /tmp/add_course_team_discussion_response.json
      - name: install tweet.sh and send tweet
        if: env.isblog == 'true'
        continue-on-error: true
        env: 
          MY_SCREEN_NAME: modernappsninja
          MY_LANGUAGE: EN
          CONSUMER_KEY: ${{ secrets.TWITTER_MODERNAPPSBYTANZU_API_KEY }}
          CONSUMER_SECRET: ${{ secrets.TWITTER_MODERNAPPSBYTANZU_API_SECRET_KEY  }}
          ACCESS_TOKEN: ${{ secrets.TWITTER_MODERNAPPSBYTANZU_ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_MODERNAPPSBYTANZU_ACCESS_TOKEN_SECRET }}        
        run: |
          # Install dependencies for tweet.sh
          sudo apt-get -y install nkf
          # Install tweet.sh
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/piroor/tweet.sh/trunk/tweet.sh" \
          -o tweet.sh
          cat tweet.sh
          chmod +x tweet.sh
          # send tweet
          ./tweet.sh post "New Tutorial Posted: $(cat /tmp/title). https://modernapps.ninja/blog/ #ModernAppsLearning by @VMwareTanzu!"
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      - run: hugo --minify
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
