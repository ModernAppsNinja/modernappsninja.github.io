name: new_user_registration
on:
  issues:
    types: [opened]

jobs:
  job_check_duplicate:
    name: job_check_duplicate
    if: contains( toJson(github), 'newuserregistration' )
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.isduplicate.outputs.isduplicate }}
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.0/yq_linux_amd64 -O /usr/bin/yq &&\
          sudo chmod +x /usr/bin/yq
      - name: curl member record file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://api.github.com/repos/modernappsninja/admin-private/contents/static/admin/userdata/members/${{ github.event.issue.user.login }}_${{ github.event.issue.user.id }}.yml" \
          -o /tmp/raw_member_record_curl.json
          cat /tmp/raw_member_record_curl.json
      - name: set envar raw_member_curl_name
        run: |
          cat /tmp/raw_member_record_curl.json | jq -r '.name' >> /tmp/raw_member_record_curl_name
          echo raw_member_curl_name=$(cat /tmp/raw_member_record_curl_name) >> $GITHUB_ENV
      - name: check if member record alredy exists to determine if this is a duplicate request
        run: |
          cat /tmp/raw_member_record_curl.json
          if [ "${{ env.raw_member_record_curl_name }}" = "${{ github.event.issue.user.login }}_${{ github.event.issue.user.id }}.yml" ]
          then
            echo isduplicate=true >> $GITHUB_ENV
            echo "the requesting user is a member"
          else
            echo isduplicate=false >> $GITHUB_ENV
            echo "the requesting user is not a member"
          fi
      - name: clone modernappsninja.github.io repo
        run: |
          git clone https://${{ secrets.NINJABOTGURU }}:x-oauth-basic@github.com/modernappsninja/modernappsninja.github.io.git
          cd modernappsninja.github.io
          pwd
      - name: create hub config file
        if: env.isduplicate == 'true'
        run: |
          echo "---" > ~/.config/hub
          echo "github.com: " >> ~/.config/hub
          echo "- oauth_token: ${{ secrets.NINJABOTGURU }}" >> ~/.config/hub
          echo "  user: modernappsninjabot" >> ~/.config/hub
          cat ~/.config/hub
      - name: if duplicate_request true, append message to issue ticket and close ticket
        if: env.isduplicate == 'true'
        run: |
          cd modernappsninja.github.io
          hub issue update ${{ github.event.issue.number }} --message "registration request for user @${{ github.event.issue.user.login }} is a duplicate request, closing this issue ticket. The system will notify user in seperate message when new member added workflow is complete" --message "The github user @${{ github.event.issue.user.login }} is already registered. This request has been marked as a dupicate request and will be closed."
          hub issue update ${{ github.event.issue.number }} -s closed
      - id: isduplicate
        if: env.isduplicate == 'false'
        run: echo "::set-output name=isduplicate::false"
      - name: transfer issue ticket to admin-private
        if: env.isduplicate == 'true'
        run: |
          cd modernappsninja.github.io
          hub issue transfer ${{ github.event.issue.number }} ${{ github.event.organization.login }}/admin-private
  job_new_member_invitation:
    name: new_member_invitation
    needs: job_check_duplicate
    runs-on: ubuntu-latest
    if: needs.job_check_duplicate.outputs.output1 == 'false'
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: set git configuration
        run: |
          git config --global user.name modernappsninjabot
          git config --global user.email modernappsninjabot@gmail.com
      - name: install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.0/yq_linux_amd64 -O /usr/bin/yq &&\
          sudo chmod +x /usr/bin/yq
      - name: extract payload data from issue body
        run: |
          echo -e '${{ github.event.issue.body }}' > /tmp/issuebody.yml
          cat /tmp/issuebody.yml
      # - name: select di 1
      #   run: |
      #     cat /tmp/issuebody.yml.first | yq e 'select(di == 1)' > /tmp/issuebody.yml
      #     cat /tmp/issuebody.yml
      - name: remove instruction lines from issuebody file #This is a fragile method, better to replace with delimiter, tried some delimiter methods that didnt work with github actions, this should ideally be reworked at some point to reduce fragility
        run: |
          cat /tmp/issuebody.yml
          sed -i '1,4d' /tmp/issuebody.yml
          cat /tmp/issuebody.yml
      - name: add metadata fields to user registration data
        run: |
          echo "memberGithubId: ${{ github.event.issue.user.id }}" >> /tmp/issuebody.yml
          cat /tmp/issuebody.yml
      - name: add more metadata fields to user registration data
        run: |
          echo "memberGithubLogin: ${{ github.event.issue.user.login}}" >> /tmp/issuebody.yml
          cat /tmp/issuebody.yml
      - name: extract user preferred email and set as requesting_user_email
        run: |
          cat /tmp/issuebody.yml
          yq e '.preferredEmailAddress' /tmp/issuebody.yml
      - name: extract user preferred email and set as requesting_user_email
        run: |
          echo requesting_user_email=$(yq e '.preferredEmailAddress' /tmp/issuebody.yml) >> $GITHUB_ENV
          requesting_user_email=$(yq e '.preferredEmailAddress' /tmp/issuebody.yml)
          echo $requesting_user_email
      - name: extract user id and set as requesting_user_id # in future need to update this file to ensure a common env is used consistently for the same variable data
        run: |
          echo $(echo requesting_user_id="${{ github.event.issue.user.id }}") >> $GITHUB_ENV
          echo $requesting_user_id
      - name: set token as GITHUB_OAUTH_TOKEN
        run: |
          echo $(echo GITHUB_OAUTH_TOKEN="${{ secrets.NINJABOTGURU }}") >> $GITHUB_ENV
          echo $GITHUB_OAUTH_TOKEN
      - name: set organization name as org_login
        run: |
          echo org_login=${{ github.event.organization.login }} >> $GITHUB_ENV
      - name: push new member record to admin-private/registrations
        run: |
          curl -X PUT \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"message": "Updating Member Record File For ${{ github.event.issue.user.login }}", "content": "'$(cat /tmp/issuebody.yml | base64 -w 0)'"}'                                                        \
          "https://api.github.com/repos/modernappsninja/admin-private/contents/userdata/members/${{ github.event.issue.user.login }}_${{ github.event.issue.user.id }}.yml" \
          -o /tmp/member_record_post_response.json
          cat /tmp/member_record_post_response.json
      - name: clone modernappsninja.github.io repo
        run: |
          git clone https://${{ secrets.NINJABOTGURU }}:x-oauth-basic@github.com/modernappsninja/modernappsninja.github.io.git
          cd modernappsninja.github.io
          pwd
      - name: check if requestor is already a modernappsninja github org member
        run: |
          curl \
            -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/orgs/modernappsninja/members/afewell" \
            -o /tmp/is_org_member_response.json
          cat /tmp/is_org_member_response.json   
          if [ -s /tmp/is_org_member_response.json ]
          then
            echo "the requestor is not an org member"
            echo orgmember=false >> $GITHUB_ENV
          else
            echo "the requestor is an org member"
            echo orgmember=true >> $GITHUB_ENV
          fi  
      - name: open repository dispatch request to trigger new member added workflow
        if: env.orgmember == 'true'
        run: |
          rdbody=\
          '{
            "client_payload": {
              "action": "added",
              "member_github_id": ${{ github.event.issue.user.id }},
              "member_login": "${{ github.event.issue.user.login }}",
              "org_name": "ModernAppsNinja",
              "team_name": "Members"
            },
            "event_type": "org_member_change"
          }'
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "$rdbody"                                                        \
          "https://api.github.com/repos/modernappsninja/modernappsninja.github.io/dispatches" \
          -o /tmp/repo_dispatch_post_response.json
          cat /tmp/repo_dispatch_post_response.json
      - name: curl orgteamregapicall.sh and make executable
        run: |
          curl https://modernapps.ninja/admin/orgteamregapicall.sh -o /tmp/orgteamregapicall.sh
          sudo chmod +x /tmp/orgteamregapicall.sh
      - name: make org and team invite api call
        run: |
          /tmp/orgteamregapicall.sh
      - name: create hub config file
        run: |
          echo "---" > ~/.config/hub
          echo "github.com: " >> ~/.config/hub
          echo "- oauth_token: ${{ secrets.NINJABOTGURU }}" >> ~/.config/hub
          echo "  user: modernappsninjabot" >> ~/.config/hub
          cat ~/.config/hub
      - name: append message to issue ticket and close ticket
        run: |
          cd modernappsninja.github.io
          hub issue update ${{ github.event.issue.number }} --message "registration request for user @${{ github.event.issue.user.login }} has been processed" --message "The github user @${{ github.event.issue.user.login }} has been sent an invite to join the modernapps ninja org, and this issue ticket will now be closed."
          hub issue update ${{ github.event.issue.number }} -s closed
      - name: transfer issue ticket to admin-private
        run: |
          cd modernappsninja.github.io
          hub issue transfer ${{ github.event.issue.number }} ${{ github.event.organization.login }}/admin-private